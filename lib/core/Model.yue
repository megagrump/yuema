import 'ffi'
import RL from yuema

Animation = ffi.typeof('ModelAnimation')

AnimationMT = {
	loadAnimations: (fileName) ->
		count = ffi.new('unsigned int[1]')
		if anims = RL.LoadModelAnimations(fileName, count)
			result = [ Mesh(anims[i]) for i = 0, count[0] - 1 ]
			RL.UnloadModelAnimations(anims, count[0])
			return result
		nil
}

AnimationMT.__index = AnimationMT

ffi.metatype(Animation, AnimationMT)

Model = ffi.typeof('Model')

ModelMT = {
	:Animation

	load: (fileName) -> ffi.gc(RL.LoadModel(fileName), RL.UnloadModel)
	loadFromMesh: (mesh) -> ffi.gc(RL.LoadModelFromMesh(mesh), RL.UnloadModelKeepMeshes)

	-- member functions --

	getBoundingBox: RL.GetModelBoundingBox
	setMeshMaterial: RL.SetModelMeshMaterial
	updateAnimation: RL.UpdateModelAnimation
	isAnimationValid: RL.IsModelAnimationValid
	unloadKeepMeshes: => RL.UnloadModelKeepMeshes(ffi.gc(@, nil))
}

ModelMT.__index = ModelMT

ffi.metatype(Model, ModelMT)
