import 'ffi'
import RG from yuema
import C from ffi
import min from math

NULL = ffi.cast('void*', 0)

intStore1 = ffi.new('int[1]')
intStore2 = ffi.new('int[1]')
floatStore = ffi.new('float[1]')

textStoreSize = 256
textStore = ffi.new('char[?]', textStoreSize)
listStoreSize = 256
listStore = ffi.new('const char*[?]', listStoreSize)

storeText = (text, textSize) ->
	if textStoreSize < textSize
		textStoreSize = textSize
		textStore = ffi.new('char[?]', textStoreSize)
	len = min(#text, textStoreSize - 1)
	ffi.copy(textStore, text, len)
	textStore[len] = 0

storeList = (list) ->
	len = #list
	if len > listStoreSize
		listStoreSize = len
		listStore = ffi.new('const char*[?]', listStoreSize)
	listStore[i - 1] = list[i] for i = 1, len
	listStore[len] = NULL

{
    ICON_NONE: C.RAYGUI_ICON_NONE
    ICON_FOLDER_FILE_OPEN: C.RAYGUI_ICON_FOLDER_FILE_OPEN
    ICON_FILE_SAVE_CLASSIC: C.RAYGUI_ICON_FILE_SAVE_CLASSIC
    ICON_FOLDER_OPEN: C.RAYGUI_ICON_FOLDER_OPEN
    ICON_FOLDER_SAVE: C.RAYGUI_ICON_FOLDER_SAVE
    ICON_FILE_OPEN: C.RAYGUI_ICON_FILE_OPEN
    ICON_FILE_SAVE: C.RAYGUI_ICON_FILE_SAVE
    ICON_FILE_EXPORT: C.RAYGUI_ICON_FILE_EXPORT
    ICON_FILE_NEW: C.RAYGUI_ICON_FILE_NEW
    ICON_FILE_DELETE: C.RAYGUI_ICON_FILE_DELETE
    ICON_FILETYPE_TEXT: C.RAYGUI_ICON_FILETYPE_TEXT
    ICON_FILETYPE_AUDIO: C.RAYGUI_ICON_FILETYPE_AUDIO
    ICON_FILETYPE_IMAGE: C.RAYGUI_ICON_FILETYPE_IMAGE
    ICON_FILETYPE_PLAY: C.RAYGUI_ICON_FILETYPE_PLAY
    ICON_FILETYPE_VIDEO: C.RAYGUI_ICON_FILETYPE_VIDEO
    ICON_FILETYPE_INFO: C.RAYGUI_ICON_FILETYPE_INFO
    ICON_FILE_COPY: C.RAYGUI_ICON_FILE_COPY
    ICON_FILE_CUT: C.RAYGUI_ICON_FILE_CUT
    ICON_FILE_PASTE: C.RAYGUI_ICON_FILE_PASTE
    ICON_CURSOR_HAND: C.RAYGUI_ICON_CURSOR_HAND
    ICON_CURSOR_POINTER: C.RAYGUI_ICON_CURSOR_POINTER
    ICON_CURSOR_CLASSIC: C.RAYGUI_ICON_CURSOR_CLASSIC
    ICON_PENCIL: C.RAYGUI_ICON_PENCIL
    ICON_PENCIL_BIG: C.RAYGUI_ICON_PENCIL_BIG
    ICON_BRUSH_CLASSIC: C.RAYGUI_ICON_BRUSH_CLASSIC
    ICON_BRUSH_PAINTER: C.RAYGUI_ICON_BRUSH_PAINTER
    ICON_WATER_DROP: C.RAYGUI_ICON_WATER_DROP
    ICON_COLOR_PICKER: C.RAYGUI_ICON_COLOR_PICKER
    ICON_RUBBER: C.RAYGUI_ICON_RUBBER
    ICON_COLOR_BUCKET: C.RAYGUI_ICON_COLOR_BUCKET
    ICON_TEXT_T: C.RAYGUI_ICON_TEXT_T
    ICON_TEXT_A: C.RAYGUI_ICON_TEXT_A
    ICON_SCALE: C.RAYGUI_ICON_SCALE
    ICON_RESIZE: C.RAYGUI_ICON_RESIZE
    ICON_FILTER_POINT: C.RAYGUI_ICON_FILTER_POINT
    ICON_FILTER_BILINEAR: C.RAYGUI_ICON_FILTER_BILINEAR
    ICON_CROP: C.RAYGUI_ICON_CROP
    ICON_CROP_ALPHA: C.RAYGUI_ICON_CROP_ALPHA
    ICON_SQUARE_TOGGLE: C.RAYGUI_ICON_SQUARE_TOGGLE
    ICON_SYMMETRY: C.RAYGUI_ICON_SYMMETRY
    ICON_SYMMETRY_HORIZONTAL: C.RAYGUI_ICON_SYMMETRY_HORIZONTAL
    ICON_SYMMETRY_VERTICAL: C.RAYGUI_ICON_SYMMETRY_VERTICAL
    ICON_LENS: C.RAYGUI_ICON_LENS
    ICON_LENS_BIG: C.RAYGUI_ICON_LENS_BIG
    ICON_EYE_ON: C.RAYGUI_ICON_EYE_ON
    ICON_EYE_OFF: C.RAYGUI_ICON_EYE_OFF
    ICON_FILTER_TOP: C.RAYGUI_ICON_FILTER_TOP
    ICON_FILTER: C.RAYGUI_ICON_FILTER
    ICON_TARGET_POINT: C.RAYGUI_ICON_TARGET_POINT
    ICON_TARGET_SMALL: C.RAYGUI_ICON_TARGET_SMALL
    ICON_TARGET_BIG: C.RAYGUI_ICON_TARGET_BIG
    ICON_TARGET_MOVE: C.RAYGUI_ICON_TARGET_MOVE
    ICON_CURSOR_MOVE: C.RAYGUI_ICON_CURSOR_MOVE
    ICON_CURSOR_SCALE: C.RAYGUI_ICON_CURSOR_SCALE
    ICON_CURSOR_SCALE_RIGHT: C.RAYGUI_ICON_CURSOR_SCALE_RIGHT
    ICON_CURSOR_SCALE_LEFT: C.RAYGUI_ICON_CURSOR_SCALE_LEFT
    ICON_UNDO: C.RAYGUI_ICON_UNDO
    ICON_REDO: C.RAYGUI_ICON_REDO
    ICON_REREDO: C.RAYGUI_ICON_REREDO
    ICON_MUTATE: C.RAYGUI_ICON_MUTATE
    ICON_ROTATE: C.RAYGUI_ICON_ROTATE
    ICON_REPEAT: C.RAYGUI_ICON_REPEAT
    ICON_SHUFFLE: C.RAYGUI_ICON_SHUFFLE
    ICON_EMPTYBOX: C.RAYGUI_ICON_EMPTYBOX
    ICON_TARGET: C.RAYGUI_ICON_TARGET
    ICON_TARGET_SMALL_FILL: C.RAYGUI_ICON_TARGET_SMALL_FILL
    ICON_TARGET_BIG_FILL: C.RAYGUI_ICON_TARGET_BIG_FILL
    ICON_TARGET_MOVE_FILL: C.RAYGUI_ICON_TARGET_MOVE_FILL
    ICON_CURSOR_MOVE_FILL: C.RAYGUI_ICON_CURSOR_MOVE_FILL
    ICON_CURSOR_SCALE_FILL: C.RAYGUI_ICON_CURSOR_SCALE_FILL
    ICON_CURSOR_SCALE_RIGHT_FILL: C.RAYGUI_ICON_CURSOR_SCALE_RIGHT_FILL
    ICON_CURSOR_SCALE_LEFT_FILL: C.RAYGUI_ICON_CURSOR_SCALE_LEFT_FILL
    ICON_UNDO_FILL: C.RAYGUI_ICON_UNDO_FILL
    ICON_REDO_FILL: C.RAYGUI_ICON_REDO_FILL
    ICON_REREDO_FILL: C.RAYGUI_ICON_REREDO_FILL
    ICON_MUTATE_FILL: C.RAYGUI_ICON_MUTATE_FILL
    ICON_ROTATE_FILL: C.RAYGUI_ICON_ROTATE_FILL
    ICON_REPEAT_FILL: C.RAYGUI_ICON_REPEAT_FILL
    ICON_SHUFFLE_FILL: C.RAYGUI_ICON_SHUFFLE_FILL
    ICON_EMPTYBOX_SMALL: C.RAYGUI_ICON_EMPTYBOX_SMALL
    ICON_BOX: C.RAYGUI_ICON_BOX
    ICON_BOX_TOP: C.RAYGUI_ICON_BOX_TOP
    ICON_BOX_TOP_RIGHT: C.RAYGUI_ICON_BOX_TOP_RIGHT
    ICON_BOX_RIGHT: C.RAYGUI_ICON_BOX_RIGHT
    ICON_BOX_BOTTOM_RIGHT: C.RAYGUI_ICON_BOX_BOTTOM_RIGHT
    ICON_BOX_BOTTOM: C.RAYGUI_ICON_BOX_BOTTOM
    ICON_BOX_BOTTOM_LEFT: C.RAYGUI_ICON_BOX_BOTTOM_LEFT
    ICON_BOX_LEFT: C.RAYGUI_ICON_BOX_LEFT
    ICON_BOX_TOP_LEFT: C.RAYGUI_ICON_BOX_TOP_LEFT
    ICON_BOX_CENTER: C.RAYGUI_ICON_BOX_CENTER
    ICON_BOX_CIRCLE_MASK: C.RAYGUI_ICON_BOX_CIRCLE_MASK
    ICON_POT: C.RAYGUI_ICON_POT
    ICON_ALPHA_MULTIPLY: C.RAYGUI_ICON_ALPHA_MULTIPLY
    ICON_ALPHA_CLEAR: C.RAYGUI_ICON_ALPHA_CLEAR
    ICON_DITHERING: C.RAYGUI_ICON_DITHERING
    ICON_MIPMAPS: C.RAYGUI_ICON_MIPMAPS
    ICON_BOX_GRID: C.RAYGUI_ICON_BOX_GRID
    ICON_GRID: C.RAYGUI_ICON_GRID
    ICON_BOX_CORNERS_SMALL: C.RAYGUI_ICON_BOX_CORNERS_SMALL
    ICON_BOX_CORNERS_BIG: C.RAYGUI_ICON_BOX_CORNERS_BIG
    ICON_FOUR_BOXES: C.RAYGUI_ICON_FOUR_BOXES
    ICON_GRID_FILL: C.RAYGUI_ICON_GRID_FILL
    ICON_BOX_MULTISIZE: C.RAYGUI_ICON_BOX_MULTISIZE
    ICON_ZOOM_SMALL: C.RAYGUI_ICON_ZOOM_SMALL
    ICON_ZOOM_MEDIUM: C.RAYGUI_ICON_ZOOM_MEDIUM
    ICON_ZOOM_BIG: C.RAYGUI_ICON_ZOOM_BIG
    ICON_ZOOM_ALL: C.RAYGUI_ICON_ZOOM_ALL
    ICON_ZOOM_CENTER: C.RAYGUI_ICON_ZOOM_CENTER
    ICON_BOX_DOTS_SMALL: C.RAYGUI_ICON_BOX_DOTS_SMALL
    ICON_BOX_DOTS_BIG: C.RAYGUI_ICON_BOX_DOTS_BIG
    ICON_BOX_CONCENTRIC: C.RAYGUI_ICON_BOX_CONCENTRIC
    ICON_BOX_GRID_BIG: C.RAYGUI_ICON_BOX_GRID_BIG
    ICON_OK_TICK: C.RAYGUI_ICON_OK_TICK
    ICON_CROSS: C.RAYGUI_ICON_CROSS
    ICON_ARROW_LEFT: C.RAYGUI_ICON_ARROW_LEFT
    ICON_ARROW_RIGHT: C.RAYGUI_ICON_ARROW_RIGHT
    ICON_ARROW_DOWN: C.RAYGUI_ICON_ARROW_DOWN
    ICON_ARROW_UP: C.RAYGUI_ICON_ARROW_UP
    ICON_ARROW_LEFT_FILL: C.RAYGUI_ICON_ARROW_LEFT_FILL
    ICON_ARROW_RIGHT_FILL: C.RAYGUI_ICON_ARROW_RIGHT_FILL
    ICON_ARROW_DOWN_FILL: C.RAYGUI_ICON_ARROW_DOWN_FILL
    ICON_ARROW_UP_FILL: C.RAYGUI_ICON_ARROW_UP_FILL
    ICON_AUDIO: C.RAYGUI_ICON_AUDIO
    ICON_FX: C.RAYGUI_ICON_FX
    ICON_WAVE: C.RAYGUI_ICON_WAVE
    ICON_WAVE_SINUS: C.RAYGUI_ICON_WAVE_SINUS
    ICON_WAVE_SQUARE: C.RAYGUI_ICON_WAVE_SQUARE
    ICON_WAVE_TRIANGULAR: C.RAYGUI_ICON_WAVE_TRIANGULAR
    ICON_CROSS_SMALL: C.RAYGUI_ICON_CROSS_SMALL
    ICON_PLAYER_PREVIOUS: C.RAYGUI_ICON_PLAYER_PREVIOUS
    ICON_PLAYER_PLAY_BACK: C.RAYGUI_ICON_PLAYER_PLAY_BACK
    ICON_PLAYER_PLAY: C.RAYGUI_ICON_PLAYER_PLAY
    ICON_PLAYER_PAUSE: C.RAYGUI_ICON_PLAYER_PAUSE
    ICON_PLAYER_STOP: C.RAYGUI_ICON_PLAYER_STOP
    ICON_PLAYER_NEXT: C.RAYGUI_ICON_PLAYER_NEXT
    ICON_PLAYER_RECORD: C.RAYGUI_ICON_PLAYER_RECORD
    ICON_MAGNET: C.RAYGUI_ICON_MAGNET
    ICON_LOCK_CLOSE: C.RAYGUI_ICON_LOCK_CLOSE
    ICON_LOCK_OPEN: C.RAYGUI_ICON_LOCK_OPEN
    ICON_CLOCK: C.RAYGUI_ICON_CLOCK
    ICON_TOOLS: C.RAYGUI_ICON_TOOLS
    ICON_GEAR: C.RAYGUI_ICON_GEAR
    ICON_GEAR_BIG: C.RAYGUI_ICON_GEAR_BIG
    ICON_BIN: C.RAYGUI_ICON_BIN
    ICON_HAND_POINTER: C.RAYGUI_ICON_HAND_POINTER
    ICON_LASER: C.RAYGUI_ICON_LASER
    ICON_COIN: C.RAYGUI_ICON_COIN
    ICON_EXPLOSION: C.RAYGUI_ICON_EXPLOSION
    ICON_1UP: C.RAYGUI_ICON_1UP
    ICON_PLAYER: C.RAYGUI_ICON_PLAYER
    ICON_PLAYER_JUMP: C.RAYGUI_ICON_PLAYER_JUMP
    ICON_KEY: C.RAYGUI_ICON_KEY
    ICON_DEMON: C.RAYGUI_ICON_DEMON
    ICON_TEXT_POPUP: C.RAYGUI_ICON_TEXT_POPUP
    ICON_GEAR_EX: C.RAYGUI_ICON_GEAR_EX
    ICON_CRACK: C.RAYGUI_ICON_CRACK
    ICON_CRACK_POINTS: C.RAYGUI_ICON_CRACK_POINTS
    ICON_STAR: C.RAYGUI_ICON_STAR
    ICON_DOOR: C.RAYGUI_ICON_DOOR
    ICON_EXIT: C.RAYGUI_ICON_EXIT
    ICON_MODE_2D: C.RAYGUI_ICON_MODE_2D
    ICON_MODE_3D: C.RAYGUI_ICON_MODE_3D
    ICON_CUBE: C.RAYGUI_ICON_CUBE
    ICON_CUBE_FACE_TOP: C.RAYGUI_ICON_CUBE_FACE_TOP
    ICON_CUBE_FACE_LEFT: C.RAYGUI_ICON_CUBE_FACE_LEFT
    ICON_CUBE_FACE_FRONT: C.RAYGUI_ICON_CUBE_FACE_FRONT
    ICON_CUBE_FACE_BOTTOM: C.RAYGUI_ICON_CUBE_FACE_BOTTOM
    ICON_CUBE_FACE_RIGHT: C.RAYGUI_ICON_CUBE_FACE_RIGHT
    ICON_CUBE_FACE_BACK: C.RAYGUI_ICON_CUBE_FACE_BACK
    ICON_CAMERA: C.RAYGUI_ICON_CAMERA
    ICON_SPECIAL: C.RAYGUI_ICON_SPECIAL
    ICON_LINK_NET: C.RAYGUI_ICON_LINK_NET
    ICON_LINK_BOXES: C.RAYGUI_ICON_LINK_BOXES
    ICON_LINK_MULTI: C.RAYGUI_ICON_LINK_MULTI
    ICON_LINK: C.RAYGUI_ICON_LINK
    ICON_LINK_BROKE: C.RAYGUI_ICON_LINK_BROKE
    ICON_TEXT_NOTES: C.RAYGUI_ICON_TEXT_NOTES
    ICON_NOTEBOOK: C.RAYGUI_ICON_NOTEBOOK
    ICON_SUITCASE: C.RAYGUI_ICON_SUITCASE
    ICON_SUITCASE_ZIP: C.RAYGUI_ICON_SUITCASE_ZIP
    ICON_MAILBOX: C.RAYGUI_ICON_MAILBOX
    ICON_MONITOR: C.RAYGUI_ICON_MONITOR
    ICON_PRINTER: C.RAYGUI_ICON_PRINTER
    ICON_PHOTO_CAMERA: C.RAYGUI_ICON_PHOTO_CAMERA
    ICON_PHOTO_CAMERA_FLASH: C.RAYGUI_ICON_PHOTO_CAMERA_FLASH
    ICON_HOUSE: C.RAYGUI_ICON_HOUSE
    ICON_HEART: C.RAYGUI_ICON_HEART
    ICON_CORNER: C.RAYGUI_ICON_CORNER
    ICON_VERTICAL_BARS: C.RAYGUI_ICON_VERTICAL_BARS
    ICON_VERTICAL_BARS_FILL: C.RAYGUI_ICON_VERTICAL_BARS_FILL
    ICON_LIFE_BARS: C.RAYGUI_ICON_LIFE_BARS
    ICON_INFO: C.RAYGUI_ICON_INFO
    ICON_CROSSLINE: C.RAYGUI_ICON_CROSSLINE
    ICON_HELP: C.RAYGUI_ICON_HELP
    ICON_FILETYPE_ALPHA: C.RAYGUI_ICON_FILETYPE_ALPHA
    ICON_FILETYPE_HOME: C.RAYGUI_ICON_FILETYPE_HOME
    ICON_LAYERS_VISIBLE: C.RAYGUI_ICON_LAYERS_VISIBLE
    ICON_LAYERS: C.RAYGUI_ICON_LAYERS
    ICON_WINDOW: C.RAYGUI_ICON_WINDOW
    ICON_HIDPI: C.RAYGUI_ICON_HIDPI
    ICON_200: C.RAYGUI_ICON_200
    ICON_201: C.RAYGUI_ICON_201
    ICON_202: C.RAYGUI_ICON_202
    ICON_203: C.RAYGUI_ICON_203
    ICON_204: C.RAYGUI_ICON_204
    ICON_205: C.RAYGUI_ICON_205
    ICON_206: C.RAYGUI_ICON_206
    ICON_207: C.RAYGUI_ICON_207
    ICON_208: C.RAYGUI_ICON_208
    ICON_209: C.RAYGUI_ICON_209
    ICON_210: C.RAYGUI_ICON_210
    ICON_211: C.RAYGUI_ICON_211
    ICON_212: C.RAYGUI_ICON_212
    ICON_213: C.RAYGUI_ICON_213
    ICON_214: C.RAYGUI_ICON_214
    ICON_215: C.RAYGUI_ICON_215
    ICON_216: C.RAYGUI_ICON_216
    ICON_217: C.RAYGUI_ICON_217
    ICON_218: C.RAYGUI_ICON_218
    ICON_219: C.RAYGUI_ICON_219
    ICON_220: C.RAYGUI_ICON_220
    ICON_221: C.RAYGUI_ICON_221
    ICON_222: C.RAYGUI_ICON_222
    ICON_223: C.RAYGUI_ICON_223
    ICON_224: C.RAYGUI_ICON_224
    ICON_225: C.RAYGUI_ICON_225
    ICON_226: C.RAYGUI_ICON_226
    ICON_227: C.RAYGUI_ICON_227
    ICON_228: C.RAYGUI_ICON_228
    ICON_229: C.RAYGUI_ICON_229
    ICON_230: C.RAYGUI_ICON_230
    ICON_231: C.RAYGUI_ICON_231
    ICON_232: C.RAYGUI_ICON_232
    ICON_233: C.RAYGUI_ICON_233
    ICON_234: C.RAYGUI_ICON_234
    ICON_235: C.RAYGUI_ICON_235
    ICON_236: C.RAYGUI_ICON_236
    ICON_237: C.RAYGUI_ICON_237
    ICON_238: C.RAYGUI_ICON_238
    ICON_239: C.RAYGUI_ICON_239
    ICON_240: C.RAYGUI_ICON_240
    ICON_241: C.RAYGUI_ICON_241
    ICON_242: C.RAYGUI_ICON_242
    ICON_243: C.RAYGUI_ICON_243
    ICON_244: C.RAYGUI_ICON_244
    ICON_245: C.RAYGUI_ICON_245
    ICON_246: C.RAYGUI_ICON_246
    ICON_247: C.RAYGUI_ICON_247
    ICON_248: C.RAYGUI_ICON_248
    ICON_249: C.RAYGUI_ICON_249
    ICON_250: C.RAYGUI_ICON_250
    ICON_251: C.RAYGUI_ICON_251
    ICON_252: C.RAYGUI_ICON_252
    ICON_253: C.RAYGUI_ICON_253
    ICON_254: C.RAYGUI_ICON_254
    ICON_255: C.RAYGUI_ICON_255

	STATE_NORMAL: C.GUI_STATE_NORMAL
	STATE_FOCUSED: C.GUI_STATE_FOCUSED
	STATE_PRESSED: C.GUI_STATE_PRESSED
	STATE_DISABLED: C.GUI_STATE_DISABLED

	TEXT_ALIGN_LEFT: C.GUI_TEXT_ALIGN_LEFT
	TEXT_ALIGN_CENTER: C.GUI_TEXT_ALIGN_CENTER
	TEXT_ALIGN_RIGHT: C.GUI_TEXT_ALIGN_RIGHT

	DEFAULT: C.DEFAULT
	LABEL: C.LABEL
	BUTTON: C.BUTTON
	TOGGLE: C.TOGGLE
	SLIDER: C.SLIDER
	PROGRESSBAR: C.PROGRESSBAR
	CHECKBOX: C.CHECKBOX
	COMBOBOX: C.COMBOBOX
	DROPDOWNBOX: C.DROPDOWNBOX
	TEXTBOX: C.TEXTBOX
	VALUEBOX: C.VALUEBOX
	SPINNER: C.SPINNER
	LISTVIEW: C.LISTVIEW
	COLORPICKER: C.COLORPICKER
	SCROLLBAR: C.SCROLLBAR
	STATUSBAR: C.STATUSBAR

	BORDER_COLOR_NORMAL: C.BORDER_COLOR_NORMAL
	BASE_COLOR_NORMAL: C.BASE_COLOR_NORMAL
	TEXT_COLOR_NORMAL: C.TEXT_COLOR_NORMAL
	BORDER_COLOR_FOCUSED: C.BORDER_COLOR_FOCUSED
	BASE_COLOR_FOCUSED: C.BASE_COLOR_FOCUSED
	TEXT_COLOR_FOCUSED: C.TEXT_COLOR_FOCUSED
	BORDER_COLOR_PRESSED: C.BORDER_COLOR_PRESSED
	BASE_COLOR_PRESSED: C.BASE_COLOR_PRESSED
	TEXT_COLOR_PRESSED: C.TEXT_COLOR_PRESSED
	BORDER_COLOR_DISABLED: C.BORDER_COLOR_DISABLED
	BASE_COLOR_DISABLED: C.BASE_COLOR_DISABLED
	TEXT_COLOR_DISABLED: C.TEXT_COLOR_DISABLED
	BORDER_WIDTH: C.BORDER_WIDTH
	TEXT_PADDING: C.TEXT_PADDING
	TEXT_ALIGNMENT: C.TEXT_ALIGNMENT
	RESERVED: C.RESERVED

	TEXT_SIZE: C.TEXT_SIZE
	TEXT_SPACING: C.TEXT_SPACING
	LINE_COLOR: C.LINE_COLOR
	BACKGROUND_COLOR: C.BACKGROUND_COLOR

	GROUP_PADDING: C.GROUP_PADDING

	SLIDER_WIDTH: C.SLIDER_WIDTH
	SLIDER_PADDING: C.SLIDER_PADDING

	PROGRESS_PADDING: C.PROGRESS_PADDING

	CHECK_PADDING: C.CHECK_PADDING

	COMBO_BUTTON_WIDTH: C.COMBO_BUTTON_WIDTH
	COMBO_BUTTON_PADDING: C.COMBO_BUTTON_PADDING

	ARROW_PADDING: C.ARROW_PADDING
	DROPDOWN_ITEMS_PADDING: C.DROPDOWN_ITEMS_PADDING

	TEXT_INNER_PADDING: C.TEXT_INNER_PADDING
	TEXT_LINES_PADDING: C.TEXT_LINES_PADDING
	COLOR_SELECTED_FG: C.COLOR_SELECTED_FG
	COLOR_SELECTED_BG: C.COLOR_SELECTED_BG

	SPIN_BUTTON_WIDTH: C.SPIN_BUTTON_WIDTH
	SPIN_BUTTON_PADDING: C.SPIN_BUTTON_PADDING

	ARROWS_SIZE: C.ARROWS_SIZE
	ARROWS_VISIBLE: C.ARROWS_VISIBLE
	SCROLL_SLIDER_PADDING: C.SCROLL_SLIDER_PADDING
	SCROLL_SLIDER_SIZE: C.SCROLL_SLIDER_SIZE
	SCROLL_PADDING: C.SCROLL_PADDING
	SCROLL_SPEED: C.SCROLL_SPEED

	SCROLLBAR_LEFT_SIDE: C.SCROLLBAR_LEFT_SIDE
	SCROLLBAR_RIGHT_SIDE: C.SCROLLBAR_RIGHT_SIDE

	LIST_ITEMS_HEIGHT: C.LIST_ITEMS_HEIGHT
	LIST_ITEMS_PADDING: C.LIST_ITEMS_PADDING
	SCROLLBAR_WIDTH: C.SCROLLBAR_WIDTH
	SCROLLBAR_SIDE: C.SCROLLBAR_SIDE

	COLOR_SELECTOR_SIZE: C.COLOR_SELECTOR_SIZE
	HUEBAR_WIDTH: C.HUEBAR_WIDTH
	HUEBAR_PADDING: C.HUEBAR_PADDING
	HUEBAR_SELECTOR_HEIGHT: C.HUEBAR_SELECTOR_HEIGHT
	HUEBAR_SELECTOR_OVERFLOW: C.HUEBAR_SELECTOR_OVERFLOW

	enable: -> RG.GuiEnable!
	disable: -> RG.GuiDisable!
	lock: -> RG.GuiLock!
	unlock: -> RG.GuiUnlock!
	isLocked: -> RG.GuiIsLocked!
	fade: (alpha) -> RG.GuiFade(alpha)
	setState: (state) -> RG.GuiSetState(state)
	getState: -> RG.GuiGetState()
	setFont: (font) -> RG.GuiSetFont(font)
	getFont: -> RG.GuiGetFont()
	setStyle: (control, property, value) -> RG.GuiSetStyle(control, property, value)
	getStyle: (control, property) -> RG.GuiGetStyle(control, property)
	windowBox: (bounds, title) -> RG.GuiWindowBox(bounds, title)
	groupBox: (bounds, text) -> RG.GuiGroupBox(bounds, text)
	line: (bounds, text) -> RG.GuiLine(bounds, text)
	panel: (bounds, text) -> RG.GuiPanel(bounds, text)
	scrollPanel: (bounds, text, content, scroll) -> RG.GuiScrollPanel(bounds, text, content, scroll)
	label: (bounds, text) -> RG.GuiLabel(bounds, text)
	button: (bounds, text) -> RG.GuiButton(bounds, text)
	labelButton: (bounds, text) -> RG.GuiLabelButton(bounds, text)
	toggle: (bounds, text, active) -> RG.GuiToggle(bounds, text, active)
	toggleGroup: (bounds, text, active) -> RG.GuiToggleGroup(bounds, text, active)
	checkBox: (bounds, text, checked) -> RG.GuiCheckBox(bounds, text, checked)
	comboBox: (bounds, text, active) -> RG.GuiComboBox(bounds, text, active)

	dropdownBox: (bounds, text, active, editMode) ->
		intStore1[0] = active[1]
		res = RG.GuiDropdownBox(bounds, text, intStore1, editMode)
		active[1] = intStore1[0]
		res

	spinner: (bounds, text, value, minValue, maxValue, editMode) ->
		intStore1[0] = value[1]
		res = RG.GuiSpinner(bounds, text, intStore1, minValue, maxValue, editMode)
		value[1] = intStore1[0]
		res

	valueBox: (bounds, text, value, minValue, maxValue, editMode) ->
		intStore1[0] = value[1]
		res = RG.GuiValueBox(bounds, text, intStore1, minValue, maxValue, editMode)
		value[1] = intStore1[0]
		res

	textBox: (bounds, text, textSize, editMode) ->
		storeText(text[1], textSize)
		res = RG.GuiTextBox(bounds, textStore, textSize, editMode)
		text[1] = ffi.string(textStore) -- TODO: only if text changed
		res

	textBoxMulti: (bounds, text, textSize, editMode) ->
		storeText(text[1], textSize)
		res = RG.GuiTextBoxMulti(bounds, textStore, textSize, editMode)
		text[1] = ffi.string(textStore) -- TODO: only if text changed
		res

	slider: (bounds, textLeft, textRight, value, minValue, maxValue) -> RG.GuiSlider(bounds, textLeft, textRight, value, minValue, maxValue)

	sliderBar: (bounds, textLeft, textRight, value, minValue, maxValue) -> RG.GuiSliderBar(bounds, textLeft, textRight, value, minValue, maxValue)
	progressBar: (bounds, textLeft, textRight, value, minValue, maxValue) -> RG.GuiProgressBar(bounds, textLeft, textRight, value, minValue, maxValue)
	statusBar: (bounds, text) -> RG.GuiStatusBar(bounds, text)
	dummyRec: (bounds, text) -> RG.GuiDummyRec(bounds, text)
	scrollBar: (bounds, value, minValue, maxValue) -> RG.GuiScrollBar(bounds, value, minValue, maxValue)
	grid: (bounds, spacing, subdivs) -> RG.GuiGrid(bounds, spacing, subdivs)

	listView: (bounds, text, scrollIndex, active) ->
		intStore1[0] = scrollIndex[1]
		res = RG.GuiListView(bounds, text, intStore1, active)
		scrollIndex[1] = intStore1[0]
		res

	listViewEx: (bounds, text, count, focus, scrollIndex, active) ->
		intStore1[0] = focus[1]
		intStore2[0] = scrollIndex[1]
		storeList(text)

		res = RG.GuiListViewEx(bounds, listStore, count, intStore1, intStore2, active)
		focus[1] = intStore1[0]
		scrollIndex[1] = intStore2[0]
		res

	messageBox: (bounds, title, message, buttons) -> RG.GuiMessageBox(bounds, title, message, buttons)

	textInputBox: (bounds, title, message, buttons, text) ->
		storeText(text[1], #text[1])
		res = RG.GuiTextInputBox(bounds, title, message, buttons, textStore)
		text[1] = ffi.string(textStore) -- TODO: only if text changed
		res

	colorPicker: (bounds, text, color) -> RG.GuiColorPicker(bounds, text, color)
	colorPanel: (bounds, text, color) -> RG.GuiColorPanel(bounds, text, color)
	colorBarAlpha: (bounds, text, alpha) -> RG.GuiColorBarAlpha(bounds, text, alpha)
	colorBarHue: (bounds, text, value) -> RG.GuiColorBarHue(bounds, text, value)
	loadStyle: (fileName) -> RG.GuiLoadStyle(fileName)
	loadStyleDefault: -> RG.GuiLoadStyleDefault!
	iconText: (iconId, text) -> RG.GuiIconText(iconId, text)
	drawIcon: (iconId, posX, posY, pixelSize, color) -> RG.GuiDrawIcon(iconId, posX, posY, pixelSize, color)
	getIcons: -> RG.GuiGetIcons!
	getIconData: (iconId) -> RG.GuiGetIconData(iconId)
	setIconData: (iconId, data) -> RG.GuiSetIconData(iconId, data)
	setIconPixel: (iconId, x, y) -> RG.GuiSetIconPixel(iconId, x, y)
	clearIconPixel: (iconId, x, y) -> RG.GuiClearIconPixel(iconId, x, y)
	checkIconPixel: (iconId, x, y) -> RG.GuiCheckIconPixel(iconId, x, y)
}
