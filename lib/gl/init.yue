import RLGL from yuema
import 'ffi' as :C

{
	-- TODO: include missing relevant GL constants for custom blending etc.
	-- defined in raylib/src/external/glad.h
	GL_FALSE: 0
	GL_TRUE: 1
	GL_BYTE: 0x1400
	GL_UNSIGNED_BYTE: 0x1401
	GL_SHORT: 0x1402
	GL_UNSIGNED_SHORT: 0x1403
	GL_INT: 0x1404
	GL_UNSIGNED_INT: 0x1405
	GL_HALF_FLOAT: 0x140B
	GL_FLOAT: 0x1406
	GL_DOUBLE: 0x140A
	GL_FIXED: 0x140C
	GL_INT_2_10_10_10_REV: 0x8D9F
	GL_UNSIGNED_INT_2_10_10_10_REV: 0x8368
	GL_UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B

	GL_INVALID_VALUE: 0x0501
	GL_INVALID_OPERATION: 0x0502

	DEFAULT_BATCH_BUFFER_ELEMENTS: C.RL_DEFAULT_BATCH_BUFFER_ELEMENTS
	DEFAULT_BATCH_BUFFERS: C.RL_DEFAULT_BATCH_BUFFERS
	DEFAULT_BATCH_DRAWCALLS: C.RL_DEFAULT_BATCH_DRAWCALLS
	DEFAULT_BATCH_MAX_TEXTURE_UNITS: C.RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS
	MAX_MATRIX_STACK_SIZE: C.RL_MAX_MATRIX_STACK_SIZE
	MAX_SHADER_LOCATIONS: C.RL_MAX_SHADER_LOCATIONS
	CULL_DISTANCE_NEAR: 0.01
	CULL_DISTANCE_FAR: C.RL_CULL_DISTANCE_FAR
	TEXTURE_WRAP_S: C.RL_TEXTURE_WRAP_S
	TEXTURE_WRAP_T: C.RL_TEXTURE_WRAP_T
	TEXTURE_MAG_FILTER: C.RL_TEXTURE_MAG_FILTER
	TEXTURE_MIN_FILTER: C.RL_TEXTURE_MIN_FILTER
	TEXTURE_FILTER_NEAREST: C.RL_TEXTURE_FILTER_NEAREST
	TEXTURE_FILTER_LINEAR: C.RL_TEXTURE_FILTER_LINEAR
	TEXTURE_FILTER_MIP_NEAREST: C.RL_TEXTURE_FILTER_MIP_NEAREST
	TEXTURE_FILTER_NEAREST_MIP_LINEAR: C.RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR
	TEXTURE_FILTER_LINEAR_MIP_NEAREST: C.RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST
	TEXTURE_FILTER_MIP_LINEAR: C.RL_TEXTURE_FILTER_MIP_LINEAR
	TEXTURE_FILTER_ANISOTROPIC: C.RL_TEXTURE_FILTER_ANISOTROPIC
	BLEND_ALPHA: C.RL_BLEND_ALPHA
	BLEND_ADDITIVE: C.RL_BLEND_ADDITIVE
	BLEND_MULTIPLIED: C.RL_BLEND_MULTIPLIED
	BLEND_ADD_COLORS: C.RL_BLEND_ADD_COLORS
	BLEND_SUBTRACT_COLORS: C.RL_BLEND_SUBTRACT_COLORS
	BLEND_ALPHA_PREMUL: C.RL_BLEND_ALPHA_PREMUL
	BLEND_CUSTOM: C.RL_BLEND_CUSTOM
	TEXTURE_WRAP_REPEAT: C.RL_TEXTURE_WRAP_REPEAT
	TEXTURE_WRAP_CLAMP: C.RL_TEXTURE_WRAP_CLAMP
	TEXTURE_WRAP_MIRROR_REPEAT: C.RL_TEXTURE_WRAP_MIRROR_REPEAT
	TEXTURE_WRAP_MIRROR_CLAMP: C.RL_TEXTURE_WRAP_MIRROR_CLAMP
	MODELVIEW: C.RL_MODELVIEW
	PROJECTION: C.RL_PROJECTION
	TEXTURE: C.RL_TEXTURE
	LINES: C.RL_LINES
	TRIANGLES: C.RL_TRIANGLES
	QUADS: C.RL_QUADS
	UNSIGNED_BYTE: C.RL_UNSIGNED_BYTE
	FLOAT: C.RL_FLOAT
	STREAM_DRAW: C.RL_STREAM_DRAW
	STREAM_READ: C.RL_STREAM_READ
	STREAM_COPY: C.RL_STREAM_COPY
	STATIC_DRAW: C.RL_STATIC_DRAW
	STATIC_READ: C.RL_STATIC_READ
	STATIC_COPY: C.RL_STATIC_COPY
	DYNAMIC_DRAW: C.RL_DYNAMIC_DRAW
	DYNAMIC_READ: C.RL_DYNAMIC_READ
	DYNAMIC_COPY: C.RL_DYNAMIC_COPY
	FRAGMENT_SHADER: C.RL_FRAGMENT_SHADER
	VERTEX_SHADER: C.RL_VERTEX_SHADER
	COMPUTE_SHADER: C.RL_COMPUTE_SHADER

	matrixMode: RLGL.rlMatrixMode
	pushMatrix: RLGL.rlPushMatrix
	popMatrix: RLGL.rlPopMatrix
	loadIdentity: RLGL.rlLoadIdentity
	translatef: RLGL.rlTranslatef
	rotatef: RLGL.rlRotatef
	scalef: RLGL.rlScalef
	multMatrixf: RLGL.rlMultMatrixf
	frustum: RLGL.rlFrustum
	ortho: RLGL.rlOrtho
	viewport: RLGL.rlViewport
	begin: RLGL.rlBegin
	end: RLGL.rlEnd
	done: RLGL.rlEnd
	vertex2i: RLGL.rlVertex2i
	vertex2f: RLGL.rlVertex2f
	vertex3f: RLGL.rlVertex3f
	texCoord2f: RLGL.rlTexCoord2f
	normal3f: RLGL.rlNormal3f
	color4ub: RLGL.rlColor4ub
	color3f: RLGL.rlColor3f
	color4f: RLGL.rlColor4f
	enableVertexArray: RLGL.rlEnableVertexArray
	disableVertexArray: RLGL.rlDisableVertexArray
	enableVertexBuffer: RLGL.rlEnableVertexBuffer
	disableVertexBuffer: RLGL.rlDisableVertexBuffer
	enableVertexBufferElement: RLGL.rlEnableVertexBufferElement
	disableVertexBufferElement: RLGL.rlDisableVertexBufferElement
	enableVertexAttribute: RLGL.rlEnableVertexAttribute
	disableVertexAttribute: RLGL.rlDisableVertexAttribute
	activeTextureSlot: RLGL.rlActiveTextureSlot
	enableTexture: RLGL.rlEnableTexture
	disableTexture: RLGL.rlDisableTexture
	enableTextureCubemap: RLGL.rlEnableTextureCubemap
	disableTextureCubemap: RLGL.rlDisableTextureCubemap
	textureParameters: RLGL.rlTextureParameters
	enableShader: RLGL.rlEnableShader
	disableShader: RLGL.rlDisableShader
	enableFramebuffer: RLGL.rlEnableFramebuffer
	disableFramebuffer: RLGL.rlDisableFramebuffer
	activeDrawBuffers: RLGL.rlActiveDrawBuffers
	enableColorBlend: RLGL.rlEnableColorBlend
	disableColorBlend: RLGL.rlDisableColorBlend
	enableDepthTest: RLGL.rlEnableDepthTest
	disableDepthTest: RLGL.rlDisableDepthTest
	enableDepthMask: RLGL.rlEnableDepthMask
	disableDepthMask: RLGL.rlDisableDepthMask
	enableBackfaceCulling: RLGL.rlEnableBackfaceCulling
	disableBackfaceCulling: RLGL.rlDisableBackfaceCulling
	enableScissorTest: RLGL.rlEnableScissorTest
	disableScissorTest: RLGL.rlDisableScissorTest
	scissor: RLGL.rlScissor
	enableWireMode: RLGL.rlEnableWireMode
	disableWireMode: RLGL.rlDisableWireMode
	setLineWidth: RLGL.rlSetLineWidth
	getLineWidth: RLGL.rlGetLineWidth
	enableSmoothLines: RLGL.rlEnableSmoothLines
	disableSmoothLines: RLGL.rlDisableSmoothLines
	enableStereoRender: RLGL.rlEnableStereoRender
	disableStereoRender: RLGL.rlDisableStereoRender
	isStereoRenderEnabled: RLGL.rlIsStereoRenderEnabled
	clearColor: RLGL.rlClearColor
	clearScreenBuffers: RLGL.rlClearScreenBuffers
	checkErrors: RLGL.rlCheckErrors
	setBlendMode: RLGL.rlSetBlendMode
	setBlendFactors: RLGL.rlSetBlendFactors
	init: RLGL.rlglInit
	close: RLGL.rlglClose
	loadExtensions: RLGL.rlLoadExtensions
	getVersion: RLGL.rlGetVersion
	getFramebufferWidth: RLGL.rlGetFramebufferWidth
	getFramebufferHeight: RLGL.rlGetFramebufferHeight
	getTextureIdDefault: RLGL.rlGetTextureIdDefault
	getShaderIdDefault: RLGL.rlGetShaderIdDefault
	getShaderLocsDefault: RLGL.rlGetShaderLocsDefault
	loadRenderBatch: RLGL.rlLoadRenderBatch
	unloadRenderBatch: RLGL.rlUnloadRenderBatch
	drawRenderBatch: RLGL.rlDrawRenderBatch
	setRenderBatchActive: RLGL.rlSetRenderBatchActive
	drawRenderBatchActive: RLGL.rlDrawRenderBatchActive
	checkRenderBatchLimit: RLGL.rlCheckRenderBatchLimit
	setTexture: RLGL.rlSetTexture
	loadVertexArray: RLGL.rlLoadVertexArray
	loadVertexBuffer: RLGL.rlLoadVertexBuffer
	loadVertexBufferElement: RLGL.rlLoadVertexBufferElement
	updateVertexBuffer: RLGL.rlUpdateVertexBuffer
	unloadVertexArray: RLGL.rlUnloadVertexArray
	unloadVertexBuffer: RLGL.rlUnloadVertexBuffer
	setVertexAttribute: RLGL.rlSetVertexAttribute
	setVertexAttributeDivisor: RLGL.rlSetVertexAttributeDivisor
	setVertexAttributeDefault: RLGL.rlSetVertexAttributeDefault
	drawVertexArray: RLGL.rlDrawVertexArray
	drawVertexArrayElements: RLGL.rlDrawVertexArrayElements
	drawVertexArrayInstanced: RLGL.rlDrawVertexArrayInstanced
	drawVertexArrayElementsInstanced: RLGL.rlDrawVertexArrayElementsInstanced
	loadTexture: RLGL.rlLoadTexture
	loadTextureDepth: RLGL.rlLoadTextureDepth
	loadTextureCubemap: RLGL.rlLoadTextureCubemap
	updateTexture: RLGL.rlUpdateTexture
	getGlTextureFormats: RLGL.rlGetGlTextureFormats
	getPixelFormatName: RLGL.rlGetPixelFormatName
	unloadTexture: RLGL.rlUnloadTexture
	genTextureMipmaps: RLGL.rlGenTextureMipmaps
	readTexturePixels: RLGL.rlReadTexturePixels
	readScreenPixels: RLGL.rlReadScreenPixels
	loadFramebuffer: RLGL.rlLoadFramebuffer
	framebufferAttach: RLGL.rlFramebufferAttach
	framebufferComplete: RLGL.rlFramebufferComplete
	unloadFramebuffer: RLGL.rlUnloadFramebuffer
	loadShaderCode: RLGL.rlLoadShaderCode
	compileShader: RLGL.rlCompileShader
	loadShaderProgram: RLGL.rlLoadShaderProgram
	unloadShaderProgram: RLGL.rlUnloadShaderProgram
	getLocationUniform: RLGL.rlGetLocationUniform
	getLocationAttrib: RLGL.rlGetLocationAttrib
	setUniform: RLGL.rlSetUniform
	setUniformMatrix: RLGL.rlSetUniformMatrix
	setUniformSampler: RLGL.rlSetUniformSampler
	setShader: RLGL.rlSetShader
	loadComputeShaderProgram: RLGL.rlLoadComputeShaderProgram
	computeShaderDispatch: RLGL.rlComputeShaderDispatch
	loadShaderBuffer: RLGL.rlLoadShaderBuffer
	unloadShaderBuffer: RLGL.rlUnloadShaderBuffer
	updateShaderBufferElements: RLGL.rlUpdateShaderBufferElements
	getShaderBufferSize: RLGL.rlGetShaderBufferSize
	readShaderBufferElements: RLGL.rlReadShaderBufferElements
	bindShaderBuffer: RLGL.rlBindShaderBuffer
	copyBuffersElements: RLGL.rlCopyBuffersElements
	bindImageTexture: RLGL.rlBindImageTexture
	getMatrixModelview: RLGL.rlGetMatrixModelview
	getMatrixProjection: RLGL.rlGetMatrixProjection
	getMatrixTransform: RLGL.rlGetMatrixTransform
	getMatrixProjectionStereo: RLGL.rlGetMatrixProjectionStereo
	getMatrixViewOffsetStereo: RLGL.rlGetMatrixViewOffsetStereo
	setMatrixProjection: RLGL.rlSetMatrixProjection
	setMatrixModelview: RLGL.rlSetMatrixModelview
	setMatrixProjectionStereo: RLGL.rlSetMatrixProjectionStereo
	setMatrixViewOffsetStereo: RLGL.rlSetMatrixViewOffsetStereo
	loadDrawCube: RLGL.rlLoadDrawCube
	loadDrawQuad: RLGL.rlLoadDrawQuad
}
