import 'ffi'
import 'lib.math.Vector2'
import RL from yuema

collisionPoint = ffi.new('Vector2[1]')

{
	Ray: ffi.typeof('Ray')
	RayCollision: ffi.typeof('RayCollision')

	checkRecs: RL.CheckCollisionRecs
	checkCircles: RL.CheckCollisionCircles
	checkCircleRec: RL.CheckCollisionCircleRec
	checkPointRec: RL.CheckCollisionPointRec
	checkPointCircle: RL.CheckCollisionPointCircle
	checkPointTriangle: RL.CheckCollisionPointTriangle
	checkPointLine: RL.CheckCollisionPointLine
	getRec: RL.GetCollisionRec
	checkSpheres: RL.CheckCollisionSpheres
	checkBoxes: RL.CheckCollisionBoxes
	checkBoxSphere: RL.CheckCollisionBoxSphere
	getRaySphere: RL.GetRayCollisionSphere
	getRayBox: RL.GetRayCollisionBox
	getRayModel: RL.GetRayCollisionModel
	getRayMesh: RL.GetRayCollisionMesh
	getRayTriangle: RL.GetRayCollisionTriangle
	getRayQuad: RL.GetRayCollisionQuad

	checkLines: (startPos1, endPos1, startPos2, endPos2) ->
		result = RL.CheckCollisionLines(startPos1, endPos1, startPos2, endPos2, collisionPoint)
		result, result and Vector2(collisionPoint[0]) or nil
}
